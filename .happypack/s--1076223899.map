{"version":3,"sources":["src/modules/filters/index.js"],"names":["formatDate","formatTime","timeStamp","fmt","addChineseUnit","addWan","integer","number","mutiple","decimalDigit","digit","getDigit","remainder","Math","floor","pow","unit","multiple","tmp","push","i","join","formatSize","size","toFixed","toString"],"mappings":"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","file":"index.js","sourceRoot":"/Users/yejiaming/Desktop/vue-ui","sourcesContent":["/**\n *\n * @authors liwb (you@example.org)\n * @date    2016/10/24 17:34\n * @version $ IIFE\n */\n\n/* name module */\n\nimport {formatDate} from '../utils/func';\n\n/**\n * [formateTime description]\n * @param  {[type]} timeStamp [description]\n * @param  {[type]} fmt       [description]\n * @return {[type]}           [description]\n */\nexport function formatTime(timeStamp, fmt) {\n  return formatDate(timeStamp, fmt);\n}\n\n/**\n * 为数字加上单位：万或亿\n *\n * 例如：\n *      1000.01 => 1000.01\n *      10000 => 1万\n *      99000 => 9.9万\n *      566000 => 56.6万\n *      5660000 => 566万\n *      44440000 => 4444万\n *      11111000 => 1111.1万\n *      444400000 => 4.44亿\n *      40000000,00000000,00000000 => 4000万亿亿\n *      4,00000000,00000000,00000000 => 4亿亿亿\n *\n * @param {number} number 输入数字.\n * @param {number} decimalDigit 小数点后最多位数，默认为2\n * @return {string} 加上单位后的数字\n */\nexport function addChineseUnit() {\n  var addWan = function (integer, number, mutiple, decimalDigit) {\n    var digit = getDigit(integer);\n    if (digit > 3) {\n      var remainder = digit % 8;\n      if (remainder >= 5) { // ‘十万’、‘百万’、‘千万’显示为‘万’\n        remainder = 4;\n      }\n      return Math.floor(number / Math.pow(10, remainder + mutiple - decimalDigit)) / Math.pow(10, decimalDigit) + '万';\n    } else {\n      return Math.floor(number / Math.pow(10, mutiple - decimalDigit)) / Math.pow(10, decimalDigit);\n    }\n  };\n\n  var getDigit = function (integer) {\n    var digit = -1;\n    while (integer >= 1) {\n      digit++;\n      integer = integer / 10;\n    }\n    return digit;\n  };\n\n  return function (number, decimalDigit) {\n    decimalDigit = decimalDigit == null ? 2 : decimalDigit;\n    var integer = Math.floor(number);\n    var digit = getDigit(integer);\n    // ['个', '十', '百', '千', '万', '十万', '百万', '千万'];\n    var unit = [];\n    if (digit > 3) {\n      var multiple = Math.floor(digit / 8);\n      if (multiple >= 1) {\n        var tmp = Math.floor(integer / Math.pow(10, 8 * multiple));\n        unit.push(addWan(tmp, number, 8 * multiple, decimalDigit));\n        for (var i = 0; i < multiple; i++) {\n          unit.push('亿');\n        }\n        return unit.join('');\n      } else {\n        return addWan(integer, number, 0, decimalDigit);\n      }\n    } else {\n      return number;\n    }\n  }();\n}\n\nexport function formatSize(size) {\n  if (size > 1024 * 1024 * 1024 * 1024) {\n    return (size / 1024 / 1024 / 1024 / 1024).toFixed(2) + ' TB';\n  } else if (size > 1024 * 1024 * 1024) {\n    return (size / 1024 / 1024 / 1024).toFixed(2) + ' GB';\n  } else if (size > 1024 * 1024) {\n    return (size / 1024 / 1024).toFixed(2) + ' MB';\n  } else if (size > 1024) {\n    return (size / 1024).toFixed(2) + ' KB';\n  }\n  return size.toString() + ' B';\n}\n"]}
{"version":3,"sources":["src/modules/directives/self-scroll.js"],"names":["startTime","startY","oldY","$el","$event","currentY","distance","deceleration","minValue","maxValue","getTop","dom","pxValue","document","defaultView","getComputedStyle","top","value","String","match","Number","undefined","handleTouchStart","event","preventDefault","Date","getTime","targetTouches","screenY","style","handleTouchMove","temDis","setTimeout","dispatchEvent","handleTouchEnd","duration","Math","abs","speed","destination","selfScroll","bind","el","binding","vnode","inserted","clientHeight","window","screen","height","Event","addEventListener","update","componentUpdated","unbind"],"mappings":"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","file":"self-scroll.js","sourceRoot":"/Users/yejiaming/Desktop/jmyour/vue-ui","sourcesContent":["/**\n * Created by yejiaming on 2017/9/28.\n */\n/**\n * Created by yejiaming on 2017/2/23.\n */\nvar startTime, startY, oldY, $el, $event, currentY, distance,deceleration=0.0008,minValue=0,maxValue;\n\nvar getTop = function (dom) {\n    var pxValue = document.defaultView.getComputedStyle(dom).top;\n    var value =  String(pxValue).match(/^\\-?\\+?[0-9]+/g);\n    return value ? Number(value) : undefined;\n};\n\nvar handleTouchStart = function (event) {\n    event.preventDefault();\n    startTime = new Date().getTime();\n    startY = event.targetTouches[0].screenY;\n    /*每次移动开始时设置初始的oldY的值*/\n    oldY = getTop($el);\n    $el.style[\"transitionDuration\"] = '0ms';\n};\n\nvar handleTouchMove = function (event) {\n    event.preventDefault();\n    currentY = event.targetTouches[0].screenY;\n    distance = currentY - startY;\n    let temDis = distance + oldY;\n    // /*设置最小值*/\n    if (temDis > minValue) {\n        temDis = minValue;\n        $el.style[\"transitionDuration\"] = '200ms';\n        $el.style[\"transitionTimingFunction\"] = 'ease-out';\n    }\n    /*设置最大值*/\n    if (temDis < -maxValue) {\n        temDis = -maxValue;\n        $el.style[\"transitionDuration\"] = '200ms';\n        $el.style[\"transitionTimingFunction\"] = 'ease-out';\n    }\n    setTimeout(()=> {\n        $el.style[\"top\"] = temDis + 'px';\n        // $el.style[\"-webkit-transform\"] = 'translateY(' + temDis + 'px)';\n    }, 0);\n    setTimeout(()=> {\n        $el.dispatchEvent($event);\n    }, 200);\n};\n\nvar handleTouchEnd = function (event) {\n    event.preventDefault();\n    let temDis = distance + oldY;\n    /*计算缓动值*/\n    var duration = new Date().getTime() - startTime;\n    // 300毫秒是判断间隔的最佳时间\n    if (duration < 300 && Math.abs(distance) > 10) {\n            var speed = Math.abs(distance) / duration,\n            destination;  // 加速度因子\n        // 初速度为0 距离等于速度的平方除以2倍加速度\n        destination = (speed * speed) / (2 * deceleration) * (distance < 0 ? -1 : 1);\n        // 初始时间为0，初始速度为0 时间等于速度除以加速度\n        duration = speed / deceleration;\n        temDis += destination;\n    }\n    /*设置最小值*/\n    if (temDis > minValue) {\n        temDis = minValue;\n    }\n    /*设置最大值*/\n    if (temDis < -maxValue) {\n        temDis = -maxValue;\n    }\n    $el.style[\"transitionDuration\"] = '200ms';\n    $el.style[\"transitionTimingFunction\"] = 'ease-out';\n    /*确定最终的滚动位置*/\n    $el.style[\"top\"] = temDis + 'px';\n    // setTimeout(()=> {\n\n        // $el.style[\"-webkit-transform\"] = 'translateY(' + temDis + 'px)';\n    // }, 0);\n    setTimeout(()=> {\n        $el.dispatchEvent($event);\n    }, 0);\n};\n\nexport var selfScroll = {\n    // 当绑定元素插入到 DOM 中。\n    bind: function (el, binding, vnode) {\n        // console.log('首次加载挂载到DOM节点中——一次挂载之运行一次');\n    },\n    inserted: function (el, binding) {\n        $el = el;\n        maxValue = $el.clientHeight - window.screen.height;\n        // console.log('DOM节点挂载到完毕——一次挂载之运行一次');\n        $event = new Event('y-scroll');\n        el.addEventListener('touchstart', handleTouchStart);\n        el.addEventListener('touchmove', handleTouchMove);\n        el.addEventListener('touchend', handleTouchEnd);\n    },\n    update: function (el, binding) {\n\n    },\n    componentUpdated: function (el, binding) {\n        // console.log('完成更新DOM节点或者绑定数据——一次挂载之运行多次');\n    },\n    unbind: function (el, binding) {\n        // console.log('取消该节点的挂载——一次挂载之运行一次');\n    }\n};\n"]}
{"version":3,"sources":["src/modules/utils/scroll.js"],"names":["Scroll","el","me","init","scrollTarge","getStyleTargetDom","$el","forbiddenScroll","setMaxValue","addEventListener","handleTouchStart","bind","handleTouchMove","handleTouchEnd","prototype","startTime","startY","oldY","$event","Event","currentY","distance","deceleration","minValue","resetY","maxValue","currentTime","lastY","lastTime","e","scrollFunc","document","documentElement","style","hiddenDom","hdHight","getPxValue","defaultView","getComputedStyle","clientHeight","Math","abs","element","attr","value","currentNode","tagName","nodeType","target","indexOf","parentNode","window","event","stopPropagation","returnvalue","getTranslateY","dom","transformString","transform","str","Number","String","match","Date","getTime","targetTouches","screenY","preventDefault","temDis","dispatchEvent","duration","resetDistance","speed","destination","setTimeout"],"mappings":"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","file":"scroll.js","sourceRoot":"/Users/yejiaming/Desktop/jmyour/vue-ui","sourcesContent":["/**\n * Created by yejiaming on 2017/10/14.\n * Scroll自定义滚动事件\n */\nexport function Scroll(el) {\n    var me = this;\n    me.init(el);\n    var scrollTarge = me.getStyleTargetDom(me.$el, 'overflowY', ['scroll', 'auto']);\n    me.forbiddenScroll(scrollTarge);\n    me.setMaxValue();\n    // 自定义滚动事件\n    me.$el.addEventListener('touchstart', me.handleTouchStart.bind(me), false);\n    me.$el.addEventListener('touchmove', me.handleTouchMove.bind(me), false);\n    me.$el.addEventListener('touchend', me.handleTouchEnd.bind(me), false);\n    // console.log('DOM节点挂载到完毕——一次挂载之运行一次');\n}\n\nScroll.prototype = {\n    // 初始化参数\n    init(el){\n        this.$el = el;\n        this.startTime = 0;\n        this.startY = 0;\n        this.oldY = null;\n        this.$event = new Event('y-scroll');\n        this.currentY = null;\n        this.distance = null;\n        this.deceleration = 0.0006;\n        this.minValue = 0;\n        this.resetY = null;\n        this.maxValue = null;\n        this.currentTime = null;\n        this.lastY = 0;\n        this.lastTime = 0;\n    },\n    // 禁用原生滚动\n    forbiddenScroll(scrollTarge){\n        var me = this;\n        // IE和webkit下鼠标滚动事件\n        scrollTarge.addEventListener('mousewheel', function (e) {\n            me.scrollFunc(e);\n        });\n        //火狐下的鼠标滚动事件\n        scrollTarge.addEventListener('DOMMouseScroll', function (e) {\n            me.scrollFunc(e);\n        });\n        document.documentElement.style['overflow'] = 'hidden';  // 禁用根节点（html）的滚动条\n    },\n    // 设置最大值\n    setMaxValue(){\n        var me = this;\n        var hiddenDom = me.getStyleTargetDom(me.$el, 'overflowY', 'hidden');\n        var hdHight = me.getPxValue(document.defaultView.getComputedStyle(hiddenDom)['height']);\n        var clientHeight = Math.abs(hdHight) < document.documentElement.clientHeight ? Math.abs(hdHight) : document.documentElement.clientHeight;\n        me.maxValue = me.$el.clientHeight - clientHeight;\n    },\n    // 获取想要的参数的目标节点，并指定属性以及属性值\n    getStyleTargetDom: function (element, attr, value) {\n        let currentNode = element;\n        while (currentNode && currentNode.tagName !== 'HTML' &&\n        currentNode.tagName !== 'BODY' && currentNode.nodeType === 1) {\n            let target = document.defaultView.getComputedStyle(currentNode)[attr];\n            if (value && value.indexOf(target) > -1) {\n                return currentNode;\n            }\n            currentNode = currentNode.parentNode;\n        }\n        return window;\n    },\n    // 阻止事件的冒泡\n    scrollFunc: function (e) {\n        e = e || window.event;\n        if (e && e.stopPropagation) {\n            // e.preventDefault();\n            e.stopPropagation();\n        } else {\n            e.returnvalue = false;\n            return false;\n        }\n    },\n    // 获取dom节点的TranslateY的值\n    getTranslateY(dom){\n        var transformString = dom.style.transform;\n        if (transformString) {\n            return this.getPxValue(transformString);\n        } else {\n            return 0;\n        }\n    },\n    // 获取100px中100的值\n    getPxValue(str){\n        return Number(String(str).match(/\\+?\\-?\\d+/g)[0]);\n    },\n    handleTouchStart(event){\n        this.lastTime = this.startTime = new Date().getTime();\n        this.distance = 0;\n        this.resetY = this.startY = event.targetTouches[0].screenY;\n        /*每次移动开始时设置初始的oldY的值*/\n        this.oldY = this.getTranslateY(this.$el);\n        this.$el.style[\"transitionDuration\"] = '0ms';\n        this.scrollFunc(event);\n    },\n    handleTouchMove(event){\n        event.preventDefault();\n        this.currentY = event.targetTouches[0].screenY;\n        this.currentTime = new Date().getTime();\n        // 二次及以上次数滚动（间歇性滚动）时间和路程重置计算，0.05是间歇性滚动的停顿位移和时间比\n        if (Math.abs(this.currentY - this.lastY) / Math.abs(this.currentTime - this.lastTime) < 0.05) {\n            this.startTime = new Date().getTime();\n            this.resetY = this.currentY;\n        }\n        this.distance = this.currentY - this.startY;\n        let temDis = this.distance + this.oldY;\n        this.$el.style[\"-webkit-transform\"] = 'translateY(' + temDis + 'px)';\n        this.lastY = this.currentY;\n        this.lastTime = this.currentTime;\n        this.$el.dispatchEvent(this.$event);\n        this.scrollFunc(event);\n    },\n    handleTouchEnd(event){\n        /*点透事件允许通过*/\n        if (!this.distance) {\n            return;\n        }\n        event.preventDefault();\n        let temDis = this.distance + this.oldY;\n        /*计算缓动值*/\n        var duration = new Date().getTime() - this.startTime;\n        // 300毫秒是判断间隔的最佳时间\n        var resetDistance = this.currentY - this.resetY;\n        if (duration < 300 && Math.abs(resetDistance) > 10) {\n            var speed = Math.abs(resetDistance) / duration,\n                destination;\n            // 初速度为0 距离等于速度的平方除以2倍加速度\n            destination = (speed * speed) / (2 * this.deceleration) * (resetDistance < 0 ? -1 : 1);\n            temDis += destination;\n        }\n        /*设置最小值*/\n        if (temDis > this.minValue) {\n            temDis = this.minValue;\n        }\n        /*设置最大值*/\n        if (temDis < -this.maxValue) {\n            temDis = -this.maxValue;\n        }\n        this.$el.style[\"transitionDuration\"] = '1000ms';\n        this.$el.style[\"transitionTimingFunction\"] = 'ease-out';\n        /*确定最终的滚动位置*/\n        setTimeout(()=> {\n            this.$el.style[\"-webkit-transform\"] = 'translateY(' + temDis + 'px)';\n        }, 0);\n        this.$el.dispatchEvent(this.$event);\n        this.scrollFunc(event);\n    }\n};"]}
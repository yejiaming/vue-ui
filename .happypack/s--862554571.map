{"version":3,"sources":["src/modules/directive/sticky.js"],"names":["getScrollEventTarget","element","currentNode","tagName","nodeType","overflowY","document","defaultView","getComputedStyle","parentNode","window","sticky","bind","el","binding","vnode","target","top","value","inserted","update","_el","componentUpdated","unbind"],"mappings":"AAAA;;;AAGA;;;AAGA;AACA,IAAIA,uBAAuB,UAAUC,OAAV,EAAmB;AAC1C,QAAIC,cAAcD,OAAlB;AACA,WAAOC,eAAeA,YAAYC,OAAZ,KAAwB,MAAvC,IACPD,YAAYC,OAAZ,KAAwB,MADjB,IAC2BD,YAAYE,QAAZ,KAAyB,CAD3D,EAC8D;AAC1D,YAAIC,YAAYC,SAASC,WAAT,CAAqBC,gBAArB,CAAsCN,WAAtC,EAAmDG,SAAnE;AACA,YAAIA,cAAc,QAAd,IAA0BA,cAAc,MAA5C,EAAoD;AAChD,mBAAOH,WAAP;AACH;AACDA,sBAAcA,YAAYO,UAA1B;AACH;AACD,WAAOC,MAAP;AACH,CAXD;AAYA,OAAO,IAAIC,SAAS;AAChB;AACAC,UAAM,UAAUC,EAAV,EAAcC,OAAd,EAAuBC,KAAvB,EAA8B;AAChC;AACA,YAAIC,SAAShB,qBAAqBa,EAArB,CAAb;AACA,YAAII,MAAMH,QAAQI,KAAR,KAAkB,WAAlB,GAAgC,CAAhC,GAAoCJ,QAAQI,KAAtD;AACH,KANe;AAOhBC,cAAU,UAAUN,EAAV,EAAc;AACpB;AACH,KATe;AAUhBO,YAAQ,UAAUC,GAAV,EAAeP,OAAf,EAAwB,CAC/B,CAXe;AAYhBQ,sBAAkB,UAAUT,EAAV,EAAcC,OAAd,EAAuB;AACrC;AACH,KAde;AAehBS,YAAQ,UAAUV,EAAV,EAAcC,OAAd,EAAuB;AAC3B;AACH;AAjBe,CAAb","file":"sticky.js","sourceRoot":"/Users/yejiaming/Desktop/jmyour/vue-ui","sourcesContent":["/**\n * Created by yejiaming on 2017/9/28.\n */\n/**\n * Created by yejiaming on 2017/2/23.\n */\n/*获取滚动目标节点对象*/\nvar getScrollEventTarget = function (element) {\n    let currentNode = element;\n    while (currentNode && currentNode.tagName !== 'HTML' &&\n    currentNode.tagName !== 'BODY' && currentNode.nodeType === 1) {\n        let overflowY = document.defaultView.getComputedStyle(currentNode).overflowY;\n        if (overflowY === 'scroll' || overflowY === 'auto') {\n            return currentNode;\n        }\n        currentNode = currentNode.parentNode;\n    }\n    return window;\n};\nexport var sticky = {\n    // 当绑定元素插入到 DOM 中。\n    bind: function (el, binding, vnode) {\n        // console.log('首次加载挂载到DOM节点中——一次挂载之运行一次');\n        var target = getScrollEventTarget(el);\n        var top = binding.value === 'undefined' ? 0 : binding.value;\n    },\n    inserted: function (el) {\n        // console.log('DOM节点挂载到完毕——一次挂载之运行一次');\n    },\n    update: function (_el, binding) {\n    },\n    componentUpdated: function (el, binding) {\n        // console.log('完成更新DOM节点或者绑定数据——一次挂载之运行多次');\n    },\n    unbind: function (el, binding) {\n        // console.log('取消该节点的挂载——一次挂载之运行一次');\n    }\n};\n"]}